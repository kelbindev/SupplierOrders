@using Shared.User
@model UserLoginDto

@{
    ViewData["Title"] = "Login";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h1>Login</h1>
                </div>
                <div class="card-body">
                    <form id="loginForm" asp-controller="Account" asp-action="Login">
                        <div class="form-group">
                            <label asp-for="UserName"></label>
                            <input asp-for="UserName" class="form-control" />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Password"></label>
                            <input asp-for="Password" class="form-control" type="password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="form-check">
                            <input asp-for="RememberMe" class="form-check-input" type="checkbox" />
                            <label asp-for="RememberMe" class="form-check-label">Remember Me</label>
                        </div>
                        <button type="submit" class="btn btn-primary">Login</button>

                        <div class="text-center mt-3">
                            Don't have an account? <a asp-controller="Account" asp-action="Register">Click here to register</a>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('loginForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const formData = new FormData(this);

            fetch('/Account/Login', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        window.location.href = '/Home/Index';
                    } else {
                        const errorMessage = data.message || 'An error occurred';
                        displayErrorMessage(errorMessage);
                    }
                })
                .catch(error => {
                    alert('An error occurred. Please try again.');
                });
        });
    </script>
}
